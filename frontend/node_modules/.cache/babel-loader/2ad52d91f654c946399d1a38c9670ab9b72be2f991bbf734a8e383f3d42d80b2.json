{"ast":null,"code":"var _jsxFileName = \"/Users/amoako/Desktop/go-apps/go-store-app/client/src/PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { PaymentElement, LinkAuthenticationElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentForm() {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (!stripe) {\n      return;\n    }\n    const clientSecret = new URLSearchParams(window.location.search).get(\"payment_intent_client_secret\");\n    if (!clientSecret) {\n      return;\n    }\n    stripe.retrievePaymentIntent(clientSecret).then(({\n      paymentIntent\n    }) => {\n      switch (paymentIntent.status) {\n        case \"succeeded\":\n          setMessage(\"Payment succeeded!\");\n          break;\n        case \"processing\":\n          setMessage(\"Your payment is processing.\");\n          break;\n        case \"requires_payment_method\":\n          setMessage(\"Your payment was not successful, please try again.\");\n          break;\n        default:\n          setMessage(\"Something went wrong.\");\n          break;\n      }\n    });\n  }, [stripe]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: \"http://localhost:3000/success\"\n      }\n    });\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  };\n  const handleSetEmail = e => {\n    setEmail(e.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(LinkAuthenticationElement, {\n      id: \"link-authentication-element\",\n      onChange: e => handleSetEmail(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PaymentElement, {\n      id: \"payment-element\",\n      options: paymentElementOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isLoading || !stripe || !elements,\n      id: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"button-text\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          id: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this) : \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"payment-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n}\n_s(PaymentForm, \"LhWChBKfkari0zZNBtJ4IuzMdKY=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentForm;\nconst Payment = () => {\n  return false ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(PaymentForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 30\n  }, this);\n};\n_c2 = Payment;\nexport default Payment;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaymentForm\");\n$RefreshReg$(_c2, \"Payment\");","map":{"version":3,"names":["React","useEffect","useState","PaymentElement","LinkAuthenticationElement","useStripe","useElements","Loader","jsxDEV","_jsxDEV","PaymentForm","_s","stripe","elements","email","setEmail","message","setMessage","isLoading","setIsLoading","clientSecret","URLSearchParams","window","location","search","get","retrievePaymentIntent","then","paymentIntent","status","handleSubmit","e","preventDefault","error","confirmPayment","confirmParams","return_url","type","paymentElementOptions","layout","handleSetEmail","value","id","onSubmit","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","options","disabled","className","_c","Payment","_c2","$RefreshReg$"],"sources":["/Users/amoako/Desktop/go-apps/go-store-app/client/src/PaymentForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport {\n\tPaymentElement,\n\tLinkAuthenticationElement,\n\tuseStripe,\n\tuseElements,\n} from \"@stripe/react-stripe-js\"\nimport Loader from \"./Loader\"\n\nfunction PaymentForm() {\n\tconst stripe = useStripe()\n\tconst elements = useElements()\n\n\tconst [email, setEmail] = useState(\"\")\n\tconst [message, setMessage] = useState(null)\n\tconst [isLoading, setIsLoading] = useState(false)\n\n\tuseEffect(() => {\n\t\tif (!stripe) {\n\t\t\treturn\n\t\t}\n\n\t\tconst clientSecret = new URLSearchParams(window.location.search).get(\n\t\t\t\"payment_intent_client_secret\"\n\t\t)\n\n\t\tif (!clientSecret) {\n\t\t\treturn\n\t\t}\n\n\t\tstripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\n\t\t\tswitch (paymentIntent.status) {\n\t\t\t\tcase \"succeeded\":\n\t\t\t\t\tsetMessage(\"Payment succeeded!\")\n\t\t\t\t\tbreak\n\t\t\t\tcase \"processing\":\n\t\t\t\t\tsetMessage(\"Your payment is processing.\")\n\t\t\t\t\tbreak\n\t\t\t\tcase \"requires_payment_method\":\n\t\t\t\t\tsetMessage(\"Your payment was not successful, please try again.\")\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tsetMessage(\"Something went wrong.\")\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t})\n\t}, [stripe])\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault()\n\n\t\tif (!stripe || !elements) {\n\t\t\t// Stripe.js hasn't yet loaded.\n\t\t\t// Make sure to disable form submission until Stripe.js has loaded.\n\t\t\treturn\n\t\t}\n\n\t\tsetIsLoading(true)\n\n\t\tconst { error } = await stripe.confirmPayment({\n\t\t\telements,\n\t\t\tconfirmParams: {\n\t\t\t\t// Make sure to change this to your payment completion page\n\t\t\t\treturn_url: \"http://localhost:3000/success\",\n\t\t\t},\n\t\t})\n\n\t\t// This point will only be reached if there is an immediate error when\n\t\t// confirming the payment. Otherwise, your customer will be redirected to\n\t\t// your `return_url`. For some payment methods like iDEAL, your customer will\n\t\t// be redirected to an intermediate site first to authorize the payment, then\n\t\t// redirected to the `return_url`.\n\t\tif (error.type === \"card_error\" || error.type === \"validation_error\") {\n\t\t\tsetMessage(error.message)\n\t\t} else {\n\t\t\tsetMessage(\"An unexpected error occurred.\")\n\t\t}\n\n\t\tsetIsLoading(false)\n\t}\n\n\tconst paymentElementOptions = {\n\t\tlayout: \"tabs\",\n\t}\n\n\tconst handleSetEmail = (e) => {\n\t\tsetEmail(e.value)\n\t}\n\n\treturn (\n\t\t<form id=\"payment-form\" onSubmit={handleSubmit}>\n\t\t\t<LinkAuthenticationElement\n\t\t\t\tid=\"link-authentication-element\"\n\t\t\t\tonChange={(e) => handleSetEmail(e)}\n\t\t\t/>\n\t\t\t<PaymentElement id=\"payment-element\" options={paymentElementOptions} />\n\t\t\t<button disabled={isLoading || !stripe || !elements} id=\"submit\">\n\t\t\t\t<span id=\"button-text\">\n\t\t\t\t\t{isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\n\t\t\t\t</span>\n\t\t\t</button>\n\t\t\t{/* Show any error or success messages */}\n\t\t\t{message && <div id=\"payment-message\">{message}</div>}\n\t\t</form>\n\t)\n}\n\nconst Payment = () => {\n\treturn false ? <Loader /> : <PaymentForm />\n}\n\nexport default Payment\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}