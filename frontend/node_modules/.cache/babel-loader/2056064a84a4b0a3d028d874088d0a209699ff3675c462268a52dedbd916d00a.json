{"ast":null,"code":"var _jsxFileName = \"/Users/amoako/Desktop/client/src/StripePayment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport PaymentForm from \"./PaymentForm\";\nimport \"./StripePayment.css\";\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// This is your test publishable API key.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"pk_test_51JJf1yHJJtDKdqBbSrNMvsU9ZwJfHuKtyr17jwriKnFwU4wul5ykBWdbdrAslofEfOie1oaQEqR5rYylYDRlTNwN00hD7VD1xd\");\nexport default function StripePayment({\n  customerData\n}) {\n  _s();\n  const [clientSecret, setClientSecret] = useState(\"\");\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    fetch(\"/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(customerData)\n    }).then(res => res.json()).then(data => setClientSecret(data.clientSecret));\n  }, [customerData]);\n  const appearance = {\n    theme: \"stripe\"\n  };\n  const options = {\n    clientSecret,\n    appearance\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"StripePayment\",\n    height: \"100%\",\n    width: \"100%\",\n    children: clientSecret && /*#__PURE__*/_jsxDEV(Elements, {\n      options: options,\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(PaymentForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}\n_s(StripePayment, \"jqw4P0KD6AlEQm6tlb46UlrlFAA=\");\n_c = StripePayment;\nvar _c;\n$RefreshReg$(_c, \"StripePayment\");","map":{"version":3,"names":["React","useState","useEffect","loadStripe","Elements","PaymentForm","jsxDEV","_jsxDEV","stripePromise","StripePayment","customerData","_s","clientSecret","setClientSecret","fetch","method","headers","body","JSON","stringify","then","res","json","data","appearance","theme","options","className","height","width","children","stripe","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amoako/Desktop/client/src/StripePayment.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { loadStripe } from \"@stripe/stripe-js\"\nimport { Elements } from \"@stripe/react-stripe-js\"\n\nimport PaymentForm from \"./PaymentForm\"\nimport \"./StripePayment.css\"\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// This is your test publishable API key.\nconst stripePromise = loadStripe(\n\t\"pk_test_51JJf1yHJJtDKdqBbSrNMvsU9ZwJfHuKtyr17jwriKnFwU4wul5ykBWdbdrAslofEfOie1oaQEqR5rYylYDRlTNwN00hD7VD1xd\"\n)\n\nexport default function StripePayment({ customerData }) {\n\tconst [clientSecret, setClientSecret] = useState(\"\")\n\n\tuseEffect(() => {\n\t\t// Create PaymentIntent as soon as the page loads\n\t\tfetch(\"/create-payment-intent\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify(customerData),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => setClientSecret(data.clientSecret))\n\t}, [customerData])\n\n\tconst appearance = {\n\t\ttheme: \"stripe\",\n\t}\n\tconst options = {\n\t\tclientSecret,\n\t\tappearance,\n\t}\n\n\treturn (\n\t\t<div className=\"StripePayment\" height=\"100%\" width=\"100%\">\n\t\t\t{clientSecret && (\n\t\t\t\t<Elements options={options} stripe={stripePromise}>\n\t\t\t\t\t<PaymentForm />\n\t\t\t\t</Elements>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,QAAQ,QAAQ,yBAAyB;AAElD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,qBAAqB;;AAE5B;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAGL,UAAU,CAC/B,6GACD,CAAC;AAED,eAAe,SAASM,aAAaA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACf;IACAY,KAAK,CAAC,wBAAwB,EAAE;MAC/BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,YAAY;IAClC,CAAC,CAAC,CACAU,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKV,eAAe,CAACU,IAAI,CAACX,YAAY,CAAC,CAAC;EACrD,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAElB,MAAMc,UAAU,GAAG;IAClBC,KAAK,EAAE;EACR,CAAC;EACD,MAAMC,OAAO,GAAG;IACfd,YAAY;IACZY;EACD,CAAC;EAED,oBACCjB,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAACC,MAAM,EAAC,MAAM;IAACC,KAAK,EAAC,MAAM;IAAAC,QAAA,EACvDlB,YAAY,iBACZL,OAAA,CAACH,QAAQ;MAACsB,OAAO,EAAEA,OAAQ;MAACK,MAAM,EAAEvB,aAAc;MAAAsB,QAAA,eACjDvB,OAAA,CAACF,WAAW;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EACV;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER;AAACxB,EAAA,CA/BuBF,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}